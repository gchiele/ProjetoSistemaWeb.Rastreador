@using Microsoft.AspNetCore.Http;
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor httpContextAccessor;
@model DispositivoMapaModel;

@{
    ViewData["Title"] = "Tempo Real";
}


<body class="sb-nav-fixed" onload="Inicio()">
    <nav class="sb-topnav navbar navbar-expand navbar-dark bg-dark">
        <!-- Navbar Brand-->
        <h3 class="navbar-brand ps-3">GChiele Automação</h3>
        <!-- Sidebar Toggle-->
        <button class="btn btn-link btn-sm order-1 order-lg-0 me-4 me-lg-0" id="sidebarToggle" href="#!"><i class="fas fa-bars"></i></button>
        <!-- Navbar Search-->
        <form class="d-none d-md-inline-block form-inline ms-auto me-0 me-md-3 my-2 my-md-0 invisible">
            <div class="input-group">
                <input class="form-control" type="text" placeholder="Procurar..." aria-label="Procurar..." aria-describedby="btnNavbarSearch" />
                <button class="btn btn-primary" id="btnNavbarSearch" type="button"><i class="fas fa-search"></i></button>
            </div>
        </form>
        <!-- Navbar-->
        <ul class="navbar-nav ms-auto ms-md-0 me-3 me-lg-4">
            <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" id="navbarDropdown" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false"><i class="fas fa-user fa-fw"></i></a>
                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdown">
                    <li><a class="dropdown-item" href="/Usuario/MinhaConta">Minha Conta</a></li>
                    <li><hr class="dropdown-divider" /></li>
                    <li><a class="dropdown-item" href="/Usuario/Sair">Logout</a></li>
                </ul>
            </li>
        </ul>
    </nav>
    <div id="layoutSidenav">
        <div id="layoutSidenav_nav">
            <nav class="sb-sidenav accordion sb-sidenav-dark" id="sidenavAccordion">
                <div class="sb-sidenav-menu">
                    <div class="nav">                   
                        
                        <a class="nav-link" href="/Dispositivo/Index">
                            <div class="sb-nav-link-icon"><i class="fas fa-angle-left"></i></div>
                            Voltar
                        </a>

                        <a class="nav-link" href="/Dispositivo/Historico/@{@Model.IdUsuarioDispositivo}">
                            <div class="sb-nav-link-icon"><i class="fas fa-history"></i></div>
                            Historico
                        </a>

                        <div class="sb-sidenav-menu-heading">Dispositivo</div>
                        <a class="nav-link" href="/Dispositivo/Editar/@{@Model.IdUsuarioDispositivo}">
                            <div class="sb-nav-link-icon"><i class="fas fa-edit"></i></div>
                            Editar
                        </a>

                        <a class="nav-link" href="/Dispositivo/Detalhes/@{@Model.IdUsuarioDispositivo}">
                            <div class="sb-nav-link-icon"><i class="fas fa-info"></i></div>
                            Detalhes
                        </a>

                        <a class="nav-link" href="/Dispositivo/ExcluirDispositivo/@{@Model.IdUsuarioDispositivo}">
                            <div class="sb-nav-link-icon"><i class="fas fa-times"></i></div>
                            Excluir 
                        </a>

                    </div>
                </div>
                <div class="sb-sidenav-footer">
                    <div class="small">Logado como:</div>
                    @httpContextAccessor.HttpContext.Session.GetString("NomeUsuario")
                </div>
            </nav>
        </div>

        <div id="layoutSidenav_content">
            <main>
                <div class="container-fluid px-4">
                    <h1 class="mt-4">@{@Model.Nome}</h1>
                    <ol class="breadcrumb mb-4">
                        <li class="breadcrumb-item active">Mapa em Tempo Real</li>
                        <li class="breadcrumb-item active" id="CampoUltimaAtualizacao"></li>
                    </ol>
                
                    <div id="mapa" style="width: 100%; height: 50vh;">
                        <!-- Monta dinamicamente o Mapa -->
                    </div>

                    <div class="d-flex justify-content-center mt-4 mb-4">
                        <div class="mr-auto">
                            <button type="button" onclick="CentralizarMarcador()" class="btn btn-primary btn-lg">
                                <i class="fas fa-crosshairs"></i>
                            </button>
                        </div>
                        <div id="BotaoEstado" class="mx-auto">
                            <!-- Monta dinamicamente o Botao -->
                        </div>
                    </div>

                    @Html.ValidationMessage("Mensagem")                      
                </div>
            </main>
            <footer class="py-4 bg-light mt-auto">
                <div class="container-fluid px-4">
                    <div class="d-flex align-items-center justify-content-between small">
                        <div class="text-muted">Copyright &copy; Your Website 2023</div>
                        <div>
                            <a href="#">Privacy Policy</a>
                            &middot;
                            <a href="#">Terms &amp; Conditions</a>
                        </div>
                    </div>
                </div>
            </footer>
        </div>
    </div>
</body>

@section Scripts{

    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCjIgpUxyyc0h5MXXB1iNl9oGYNN4-_aIA"></script>

    <script> 

        const ID_USUARIO = '@httpContextAccessor.HttpContext.Session.GetString("IdUsuario")';
        const ID_USUARIO_DISPOSITIVO = '@{@Model.IdUsuarioDispositivo}';
        const NOME_DISPOSITIVO = '@{@Model.Nome}';

        // Variaveis do mapa
        var mapa, marcador;


        function Inicio(){
            
            BuscaEstadoBotaoStop(ID_USUARIO_DISPOSITIVO);
            setInterval(BuscaEstadoBotaoStop, 5000, ID_USUARIO_DISPOSITIVO);

            BuscaDadosMarcador(ID_USUARIO_DISPOSITIVO);
            setInterval(BuscaDadosMarcador, 5000, ID_USUARIO_DISPOSITIVO);
        }

        function BuscaDadosMarcador(id) {

            $.post("/Dispositivo/BuscaDadosMarcador",
                // dados
                {
                    id: id
                },
                // sucesso
                function (resposta) {
                    if (resposta.dataHora != "") {
                        if (mapa == undefined) {
                            CriarMapa(resposta);
                        } else {
                            MarcadorMapa(resposta);
                        }
                    } else{
                        document.getElementById("CampoUltimaAtualizacao").innerHTML = 'Sem Dados do Dispositivo';
                        if (mapa == undefined) {
                           CriarMapaVazio();
                        } 
                    }     
                }
            );
        }

        function BuscaEstadoBotaoStop(id) {
            $.post("/Dispositivo/BuscaEstadoBotaoStop",
                // dados
                {
                    id: id
                },
                // sucesso
                function (resposta) {
                    NewBotao(resposta);
                }
            );
        }


        function AlteraEstadoBotaoStop(Estado) {
            $.post("/Dispositivo/AlteraEstadoBotaoStop",
                // dados
                {
                    id: ID_USUARIO_DISPOSITIVO,
                    estado: Estado
                },
                // sucesso
                function (resposta) {
                    BuscaEstadoBotaoStop(ID_USUARIO_DISPOSITIVO);
                }
            );
        }


        function CentralizarMarcador(){
            mapa.panTo(marcador.getPosition());
        }


        function CriarMapa(dadosMarcador) {

            var coordenadas = { lat: dadosMarcador.latitude, lng: dadosMarcador .longitude};

            // Cria um objeto Map com as opções de exibição do mapa
            mapa = new google.maps.Map(document.getElementById('mapa'), {
                zoom: 15, // Zoom inicial
                center: coordenadas, // Centro do mapa
                mapTypeId: google.maps.MapTypeId.ROADMAP // Tipo de mapa
            });

            MarcadorMapa(dadosMarcador);
        }


        function CriarMapaVazio() {
            const coordenadas = { lat: -23.5517943, lng: -46.6332387 };

            // Cria um objeto Map com as opções de exibição do mapa
            mapa = new google.maps.Map(document.getElementById('mapa'), {
                zoom: 3, // Zoom inicial
                center: coordenadas, // Centro do mapa
                mapTypeId: google.maps.MapTypeId.ROADMAP // Tipo de mapa
            });

    
        }


        function MarcadorMapa(dadosMarcador) {
            var coordenadas = { lat: dadosMarcador.latitude, lng: dadosMarcador .longitude};

            // Verifica se o marcador existe
            if(marcador != undefined){
                marcador.setPosition(coordenadas);
            }else{
                // Cria Marcador
                    marcador = new google.maps.Marker({
                    position: coordenadas,
                    map: mapa
                });

                // Adicione um evento de clique para abrir a janela de informações quando o marcador for clicado
                marcador.addListener('click', function () {
                    infoWindow.open(mapa, marcador);
                });


                var StatusVeiculo = "Bloqueado";
                if (dadosMarcador.saida == false) {
                    StatusVeiculo = "Liberado";
                }

                // Crie um objeto InfoWindow
                var infoWindow = new google.maps.InfoWindow({
                    content: '<h4>' + NOME_DISPOSITIVO + '</h4>' + '<p> Satelites: ' + dadosMarcador.satelites + 
                        '<br> Sinal Operadora: ' + dadosMarcador.sinalOperadora + ' <br> Status Veiculo: ' + StatusVeiculo+'</p>'
                });
            }
           
            document.getElementById("CampoUltimaAtualizacao").innerHTML = 'Utima Atualizacao: ' + dadosMarcador.dataHora;      

        }
     
        function NewBotao(EstadoAtual) {

            /*
              <button type="button" onclick="AlteraEstadoVeiculo('Bloqueado')" class="btn btn-danger btn-lg">Veiculo Bloqueado <i class="fas fa-lock"></i></button>

              ou

              <button type="button" onclick="AlteraEstadoVeiculo('Liberado')" class="btn btn-success btn-lg">Veiculo Liberado <i class="fas fa-lock-open"></i></button>
            */

            const button = document.createElement('button');
            button.Type = 'button';
            if (EstadoAtual == 'Liberado') {
                button.className = 'btn btn-success btn-lg';
                button.innerHTML = "Veiculo Liberado ";
                button.setAttribute("onclick", "AlteraEstadoBotaoStop('Bloqueado')");
            }else{
                button.className = 'btn btn-danger btn-lg';
                button.innerHTML = "Veiculo Bloqueado ";
                button.setAttribute("onclick", "AlteraEstadoBotaoStop('Liberado')");
            }

            const i = document.createElement('i');
            if (EstadoAtual == 'Liberado') {
                i.className = 'fas fa-lock-open';
            } else {
                i.className = 'fas fa-lock';
            }       
            button.appendChild(i);

            document.getElementById("BotaoEstado").innerHTML = "";

            const divPai = document.getElementById("BotaoEstado");
            divPai.appendChild(button);
        }

    </script>
}